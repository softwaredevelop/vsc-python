{
	"name": "python-dev",
	"build": {
		"dockerfile": "Dockerfile",
		"args": {
			"USER_UID": "1000",
			"USERNAME": "vscode",
			// "VARIANT": "latest"
			"VARIANT": "slim"
		}
	},

	// Configure tool-specific properties.
	"customizations": {
		// Configure properties specific to VS Code.
			"vscode": {
				"settings": {
					"jupyter.exportWithOutputEnabled": true,
					"jupyter.generateSVGPlots": true,
					"python.formatting.blackPath": "~/.local/bin/black",
					"python.formatting.provider": "black",
					"python.linting.banditPath": "~/.local/bin/bandit",
					"python.linting.enabled": true,
					"python.linting.flake8Path": "~/.local/bin/flake8",
					"python.linting.mypyPath": "~/.local/bin/mypy",
					"python.linting.pycodestylePath": "~/.local/bin/pycodestyle",
					"python.linting.pydocstylePath": "~/.local/bin/pydocstyle",
					"python.linting.pylintEnabled": true,
					"python.linting.pylintPath": "~/.local/bin/pylint",
					"python.testing.pytestEnabled": true,
					"python.testing.pytestPath": "~/.local/bin/pytest",
					"python.testing.unittestEnabled": true
				},
				"extensions": [
					"ms-python.python"
				]
				// "devPort": {}
			}
		},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode",

	"workspaceMount": "source=${localWorkspaceFolder},target=/workspace,type=bind,Z",
	"workspaceFolder": "/workspace",

	"runArgs": ["--userns=keep-id", "--name=python-dev"],
	"containerUser": "vscode"
}
